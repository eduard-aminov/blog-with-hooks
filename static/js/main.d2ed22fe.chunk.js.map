{"version":3,"sources":["assets/preloader/preloader.svg","contexts/currentUserContext.js","hooks/useLocalStorage.js","hooks/useFetch.js","components/currentUserChecker.js","components/TopBar.jsx","components/ErrorMessage.jsx","components/Loading.jsx","components/TagList.jsx","pages/article/Article.jsx","components/BackendErrorMessages.js","pages/auth/Auth.jsx","components/ArticleForm.jsx","pages/createArticle/CreateArticle.jsx","pages/editArticle/EditArticle.jsx","components/AddToFavorites.jsx","components/Feed.jsx","components/FeedToggle.jsx","utils.js","components/Paginator.jsx","components/PopularTags.jsx","pages/globalFeed/GlobalFeed.jsx","pages/settings/Settings.jsx","pages/tagFeed/TagFeed.jsx","pages/userProfile/UserArticles.jsx","pages/userProfile/UserProfile.jsx","pages/yourFeed/YourFeed.jsx","routes.jsx","index.js"],"names":["module","exports","initialState","isLoading","isLoggedIn","currentUser","isFetching","reducer","state","action","type","payload","CurrentUserContext","createContext","CurrentUserProvider","children","value","useReducer","Provider","useLocalStorage","key","initialValue","useState","localStorage","getItem","setValue","useEffect","setItem","useFetch","url","response","setResponse","setIsLoading","error","setError","options","setOptions","token","doFetch","useCallback","skipGetResponseAfterUnmount","requestOptions","headers","authorization","axios","then","data","catch","CurrentUserChecker","useContext","dispatch","user","TopBar","className","to","exact","username","src","image","alt","ErrorMessage","Loading","preloader","TagList","tags","map","tag","Article","slug","match","params","apiUrl","fetchArticleResponse","fetchArticleIsLoading","fetchArticleError","doFetchArticle","deleteArticleResponse","doDeleteArticle","currentUserState","successfullDelete","setSuccessfulDelete","article","title","author","createdAt","onClick","method","body","tagList","BackendErrorMessages","backendMessages","errorMessages","Object","keys","name","messages","join","Auth","props","isLogin","location","pathname","pageTitle","descriptionLink","descriptionText","email","setEmail","password","setPassword","setUsername","isSuccessfulSubmitting","setIsSuccessfulSubmitting","setToken","errors","onSubmit","e","preventDefault","placeholder","onChange","target","disabled","ArticleForm","initialValues","setTitle","setBody","description","setDescription","setTagList","rows","CreateArticle","isSuccessfulSubmit","setIsSuccessfulSubmit","EditArticle","history","useHistory","updateArticleResponse","updateArticleError","doUpdateArticle","setInitialValues","isAuthor","push","AddToFavorites","isFavorited","favoritesCount","isFavoritedWithResponse","favorited","favoritesCountWithResponse","buttonClasses","classNames","Feed","articles","index","FeedToggle","getPaginator","search","parsedSearch","parse","currentPage","page","Number","offset","PaginatorItem","classes","Paginator","start","end","total","limit","pagesCount","Math","ceil","pages","Array","el","href","aria-label","aria-hidden","slice","PopularTags","GlobalFeed","stringifiedParams","stringify","articlesCount","Settings","setImage","bio","setBio","isSuccessfulLogout","setIsSuccessfulLogout","TagFeed","UserArticles","isFavorites","UserProfile","includes","profile","YourFeed","Routes","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2ed22fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.4e9bd8b8.svg\";","import React, {createContext, useReducer} from 'react'\n\nconst initialState = {\n    isLoading: false,\n    isLoggedIn: null,\n    currentUser: null,\n    isFetching: false\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'TOGGLE_IS_FETCHING':\n            return {\n                ...state,\n                isFetching: action.payload\n            }\n        case 'LOADING':\n            return {\n                ...state,\n                isLoading: true\n            }\n        case 'SET_AUTHORIZED':\n            return {\n                ...state,\n                isLoggedIn: true,\n                isLoading: false,\n                currentUser: action.payload\n            }\n        case 'SET_UNAUTHORIZED':\n            return {\n                ...state,\n                isLoggedIn: false,\n            }\n        case 'LOGOUT':\n            return {\n            ...state,\n                isLoggedIn: false,\n                currentUser: null\n            }\n        default:\n            return state\n    }\n}\n\nexport const CurrentUserContext = createContext([{}, action => {}])\n\nexport const CurrentUserProvider = ({children}) => {\n    const value = useReducer(reducer, initialState)\n    return <CurrentUserContext.Provider value={value}>{children}</CurrentUserContext.Provider>\n}","import {useEffect, useState} from 'react'\n\nconst useLocalStorage = (key, initialValue = '') => {\n    const [value, setValue] = useState(() => {\n        return localStorage.getItem(key) || initialValue\n    })\n\n    useEffect(() => {\n        localStorage.setItem(key, value)\n    }, [key, value])\n\n    return [value, setValue]\n}\n\nexport default useLocalStorage","import axios from 'axios'\nimport {useCallback, useEffect, useState} from 'react'\nimport useLocalStorage from './useLocalStorage'\n\nconst useFetch = (url) => {\n    const baseUrl = 'https://conduit.productionready.io/api'\n    const [response, setResponse] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState(null)\n    const [options, setOptions] = useState({})\n    const [token] = useLocalStorage('token')\n\n    const doFetch = useCallback((options = {}) => {\n        setOptions(options)\n        setIsLoading(true)\n    },[])\n\n    useEffect(() => {\n        let skipGetResponseAfterUnmount = false\n        const requestOptions = {\n            ...options,\n            ...{\n                headers: {\n                    authorization: token ? `Token ${token}` : ''\n                }\n            }\n        }\n        if(!isLoading) {\n            return\n        }\n        axios(baseUrl + url, requestOptions)\n            .then(response => {\n                if (!skipGetResponseAfterUnmount){\n                    setResponse(response.data)\n                    setIsLoading(false)\n                }\n            })\n            .catch(error => {\n                if (!skipGetResponseAfterUnmount) {\n                    setError(error.response.data)\n                    setIsLoading(false)\n                }\n            })\n\n        return () => {\n            skipGetResponseAfterUnmount = true\n        }\n    }, [isLoading, options, url, token])\n    return [{response, isLoading, error}, doFetch]\n}\n\nexport default useFetch\n\n\n","import {useContext, useEffect} from 'react'\nimport {CurrentUserContext} from '../contexts/currentUserContext'\nimport useFetch from '../hooks/useFetch'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nconst CurrentUserChecker = ({children}) => {\n    const [{response}, doFetch] = useFetch('/user')\n    const [, dispatch] = useContext(CurrentUserContext)\n    const [token] = useLocalStorage('token')\n\n    useEffect(() => {\n        if (!token) {\n            dispatch({type: 'SET_UNAUTHORIZED'})\n            return\n        }\n\n        doFetch()\n        dispatch({type: 'SET_LOADING'})\n    }, [dispatch, token, doFetch])\n\n    useEffect(() => {\n        if (!response) {\n            return\n        }\n        dispatch({type: 'SET_AUTHORIZED', payload: response.user})\n    },[response, dispatch])\n    return children\n}\n\nexport default CurrentUserChecker","import React, {Fragment, useContext} from 'react'\nimport {Link, NavLink} from 'react-router-dom'\nimport {CurrentUserContext} from '../contexts/currentUserContext'\n\nconst TopBar = () => {\n    const [currentUserState] = useContext(CurrentUserContext)\n    const user = currentUserState.currentUser\n\n    return (\n        <nav className=\"navbar navbar-light\">\n            <div className=\"container\">\n                <Link className='navbar-brand' to={'/'}>\n                    Home\n                </Link>\n                <ul className=\"nav navbar-nav pull-xs-right\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to='/' exact>\n                            Home\n                        </NavLink>\n                    </li>\n                    {!user && (\n                        <Fragment>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to='/login' exact>\n                                    Sign-in\n                                </NavLink>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to='/register' exact>\n                                    Sign-up\n                                </NavLink>\n                            </li>\n                        </Fragment>\n                    )}\n                    {user && (\n                        <Fragment>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to='/articles/new'>\n                                    <i className='ion-compose'></i>\n                                    &nbsp; Add Post\n                                </NavLink>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to='/settings'>\n                                    <i className='ion-gear-a'></i>\n                                    &nbsp; Settings\n                                </NavLink>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to={`/profiles/${user.username}`} exact>\n                                    <img className='user-pic' src={user.image} alt=\"\"/>\n                                    &nbsp; {user.username}\n                                </NavLink>\n                            </li>\n                        </Fragment>\n                    )}\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default TopBar","import React from 'react'\n\nconst ErrorMessage = () => {\n    return (\n        <div>Some error happened...</div>\n    )\n}\n\nexport default ErrorMessage","import React from 'react'\nimport preloader from '../assets/preloader/preloader.svg'\n\nconst Loading = () => {\n    return (\n        <img className='justify-content-center' src={preloader} alt=\"\"/>\n    )\n}\n\nexport default Loading","import React from 'react'\n\nconst TagList = ({tags}) => {\n    return (\n        <ul className=\"tag-list\">\n            {tags.map(tag => (\n                <li key={tag} className='tag-default tag-pill tag-outline'>\n                    {tag}\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nexport default TagList","import React, {useContext, useEffect, useState} from 'react'\nimport {Link, Redirect} from 'react-router-dom'\nimport ErrorMessage from '../../components/ErrorMessage'\nimport Loading from '../../components/Loading'\nimport TagList from '../../components/TagList'\nimport {CurrentUserContext} from '../../contexts/currentUserContext'\nimport useFetch from '../../hooks/useFetch'\n\nconst Article = ({match}) => {\n    const slug = match.params.slug\n    const apiUrl = `/articles/${slug}`\n    const [{\n        response: fetchArticleResponse,\n        isLoading: fetchArticleIsLoading,\n        error: fetchArticleError},\n        doFetchArticle\n    ] = useFetch(apiUrl)\n    const [{response: deleteArticleResponse}, doDeleteArticle] = useFetch(apiUrl)\n    const [currentUserState] = useContext(CurrentUserContext)\n    const [successfullDelete, setSuccessfulDelete] = useState(false)\n\n    const isAuthor = () => {\n        if (!fetchArticleResponse || !currentUserState.isLoggedIn) {\n            return false\n        }\n        return currentUserState.currentUser.username === fetchArticleResponse.article.author.username\n    }\n\n    useEffect(() => {\n        doFetchArticle()\n    },[doFetchArticle])\n\n    useEffect(() => {\n        if (!deleteArticleResponse) {\n            return\n        }\n        setSuccessfulDelete(true)\n    }, [deleteArticleResponse])\n\n    const deleteArticle = () => {\n        doDeleteArticle({\n            method: 'delete'\n        })\n    }\n\n    if (successfullDelete) {\n        return <Redirect to={'/'}/>\n    }\n\n    return (\n        <div className=\"article-page\">\n            <div className=\"banner\">\n                {!fetchArticleIsLoading && fetchArticleResponse && (\n                    <div className=\"container\">\n                        <h1>{fetchArticleResponse.article.title}</h1>\n                        <div className=\"article-meta\">\n                            <Link to={`/profiles/${fetchArticleResponse.article.author.username}`}>\n                                <img src={fetchArticleResponse.article.author.image} alt=\"\"/>\n                            </Link>\n                            <div className=\"info\">\n                                <Link to={`/profiles/${fetchArticleResponse.article.author.username}`}>\n                                    {fetchArticleResponse.article.author.username}\n                                </Link>\n                                <span className=\"date\">{fetchArticleResponse.article.createdAt}</span>\n                                <div>\n                                    {isAuthor() && (\n                                        <span>\n                                            <Link\n                                                className='btn btn-outline-secondary btn-sm'\n                                                to={`/article/${fetchArticleResponse.article.slug}/edit`}\n                                            >\n                                                <i className='ion-edit'></i>\n                                                &nbsp; Edit Article\n                                            </Link>\n                                            &nbsp;\n                                            <button\n                                                className='btn btn-outline-danger btn-sm'\n                                                onClick={deleteArticle}\n                                            >\n                                                <i className='ion-trash-a'></i>\n                                                &nbsp; Delete Article\n                                            </button>\n                                        </span>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n            <div className=\"container page\">\n                {fetchArticleIsLoading && <Loading/>}\n                {fetchArticleError && <ErrorMessage/>}\n                {!fetchArticleIsLoading && fetchArticleResponse && (\n                    <div className=\"row article-content\">\n                        <div className=\"col-xs-12\">\n                            <div>\n                                <p>{fetchArticleResponse.article.body}</p>\n                            </div>\n                            <TagList tags={fetchArticleResponse.article.tagList} />\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Article","import React from 'react'\n\nconst BackendErrorMessages = ({backendMessages}) => {\n    const errorMessages = Object.keys(backendMessages).map(name =>{\n        const messages = backendMessages[name].join(' ')\n        return `${name} ${messages}`\n    })\n\n    return (\n        <ul className='error-messages'>\n            {errorMessages.map(error => (\n               <li key={error}>{error}</li>\n            ))}\n        </ul>\n    )\n}\n\nexport default BackendErrorMessages","import React, {useContext, useEffect, useState} from 'react'\nimport {Link, Redirect} from 'react-router-dom'\nimport {CurrentUserContext} from '../../contexts/currentUserContext'\nimport useFetch from '../../hooks/useFetch'\nimport useLocalStorage from '../../hooks/useLocalStorage'\nimport BackendErrorMessages from '../../components/BackendErrorMessages'\n\nconst Auth = (props) => {\n    const isLogin = props.location.pathname === '/login'\n    const pageTitle = isLogin ? 'Sign In' : 'Sign Up'\n    const descriptionLink = isLogin ? '/register' : '/login'\n    const descriptionText = isLogin ? 'Need an account?' : 'Have an account?'\n    const apiUrl = isLogin ? '/users/login' : '/users'\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [username, setUsername] = useState('')\n    const [isSuccessfulSubmitting, setIsSuccessfulSubmitting] = useState(false)\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n    const [, setToken] = useLocalStorage('token')\n    const [, dispatch] = useContext(CurrentUserContext)\n\n    const handleSubmit = (e) => {\n        const user = isLogin ? {email, password} : {email, password, username}\n        e.preventDefault()\n        doFetch({\n            method: 'POST',\n            data: {\n                user\n            }\n        })\n    }\n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const handleUsernameChange = (e) => {\n        setUsername(e.target.value)\n    }\n\n    useEffect(() => {\n        if (!response) {\n            return\n        }\n        setToken(response.user.token)\n        dispatch({type: 'SET_AUTHORIZED', payload: response.user})\n        setIsSuccessfulSubmitting(true)\n    }, [response, setToken, dispatch])\n\n    if (isSuccessfulSubmitting) {\n        return <Redirect to={'/'} />\n    }\n\n    return (\n        <div className=\"auth-page\">\n            <div className=\"container page\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-md-3 col-xs-12\">\n                        <h1 className=\"text-xs-center\">\n                            {pageTitle}\n                        </h1>\n                        <p className=\"text-xs-center\">\n                            <Link to={descriptionLink}>{descriptionText}</Link>\n                        </p>\n                        {error && <BackendErrorMessages backendMessages={error.errors}/>}\n                        <form onSubmit={handleSubmit}>\n                            <fieldset>\n                                {!isLogin && (\n                                    <fieldset className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className='form-control form-control-lg'\n                                            placeholder='Username'\n                                            onChange={handleUsernameChange}\n                                            value={username}\n                                        />\n                                    </fieldset>\n                                )}\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"email\"\n                                        className='form-control form-control-lg'\n                                        placeholder='Email'\n                                        onChange={handleEmailChange}\n                                        value={email}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className='form-control form-control-lg'\n                                        placeholder='Password'\n                                        onChange={handlePasswordChange}\n                                        value={password}\n                                    />\n                                </fieldset>\n                                <button\n                                    className=\"btn btn-lg btn-primary pull-xs-right\"\n                                    type='submit'\n                                    disabled={isLoading}\n                                >\n                                    {pageTitle}\n                                </button>\n                            </fieldset>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Auth","import React, {useEffect, useState} from 'react'\nimport BackendErrorMessages from './BackendErrorMessages'\n\nconst ArticleForm = ({onSubmit, errors, initialValues}) => {\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [description, setDescription] = useState('')\n    const [tagList, setTagList] = useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const article = {\n            title,\n            body,\n            description,\n            tagList\n        }\n        onSubmit(article)\n    }\n\n    const handleChangeTitle = (e) => {\n        setTitle(e.target.value)\n    }\n\n    const handleChangeBody = (e) => {\n        setBody(e.target.value)\n    }\n\n    const handleChangeDescription = (e) => {\n        setDescription(e.target.value)\n    }\n\n    const handleChangeTagList = (e) => {\n        setTagList(e.target.value)\n    }\n\n    useEffect(() => {\n        if (!initialValues) {\n            return\n        }\n        setTitle(initialValues.title)\n        setDescription(initialValues.description)\n        setBody(initialValues.body)\n        setTagList(initialValues.tagList.join(' '))\n    },[initialValues])\n\n    return (\n        <div className=\"editor-page\">\n            <div className=\"container page\">\n                <div className=\"row\">\n                    <div className=\"col-md-10 offset-md-1 col-xs-12\">\n                        {errors && <BackendErrorMessages backendMessages={errors}/>}\n                        <form onSubmit={handleSubmit}>\n                            <fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className='form-control form-control-lg'\n                                        placeholder='Article title'\n                                        value={title}\n                                        onChange={handleChangeTitle}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className='form-control form-control-lg'\n                                        placeholder='What is this article about?'\n                                        value={description}\n                                        onChange={handleChangeDescription}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <textarea\n                                        type=\"text\"\n                                        className='form-control'\n                                        rows='8'\n                                        placeholder='Write your article'\n                                        value={body}\n                                        onChange={handleChangeBody}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className='form-control form-control-lg'\n                                        placeholder='Enter tags'\n                                        value={tagList}\n                                        onChange={handleChangeTagList}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <button\n                                        type='submit'\n                                        className='btn btn-lg btn-primary pull-xs-right'\n                                    >\n                                        Publish article\n                                    </button>\n                                </fieldset>\n                            </fieldset>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ArticleForm","import React, {useContext, useEffect, useState} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport ArticleForm from '../../components/ArticleForm'\nimport {CurrentUserContext} from '../../contexts/currentUserContext'\nimport useFetch from '../../hooks/useFetch'\n\nconst CreateArticle = () => {\n    const initialValues = {\n        title: '',\n        description: '',\n        body: '',\n        tagList: []\n    }\n    const apiUrl = '/articles'\n    const [{response, error}, doFetch] = useFetch(apiUrl)\n    const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false)\n    const [currentUserState] = useContext(CurrentUserContext)\n\n    const handleSubmit = (article) => {\n        doFetch({\n            method: 'post',\n            data: {\n                article\n            }\n        })\n    }\n\n    useEffect(() => {\n        if (!response) {\n            return\n        }\n\n        setIsSuccessfulSubmit(true)\n    },[response])\n\n    if (isSuccessfulSubmit) {\n       return <Redirect to={`/article/${response.article.slug}`}/>\n    }\n\n    if (!currentUserState.isLoggedIn) {\n        return <Redirect to={'/'} />\n    }\n\n    return (\n        <ArticleForm\n            onSubmit={handleSubmit}\n            errors={(error && error.errors) || {}}\n            initialValues={initialValues}\n        />\n    )\n}\n\nexport default CreateArticle","import React, {useCallback, useContext, useEffect, useState} from 'react'\nimport {Redirect, useHistory} from 'react-router-dom'\nimport ArticleForm from '../../components/ArticleForm'\nimport {CurrentUserContext} from '../../contexts/currentUserContext'\nimport useFetch from '../../hooks/useFetch'\n\nconst EditArticle = ({match}) => {\n    const history = useHistory()\n    const slug = match.params.slug\n    const apiUrl = `/articles/${slug}`\n    const [{response: fetchArticleResponse}, doFetchArticle] = useFetch(apiUrl)\n    const [{response: updateArticleResponse, error: updateArticleError}, doUpdateArticle] = useFetch(apiUrl)\n    const [initialValues, setInitialValues] = useState(null)\n    const [currentUserState] = useContext(CurrentUserContext)\n    const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false)\n\n    const isAuthor = useCallback(() => {\n        if (!fetchArticleResponse || !currentUserState.isLoggedIn) {\n            return false\n        }\n        return currentUserState.currentUser.username === fetchArticleResponse.article.author.username\n    },[currentUserState, fetchArticleResponse])\n\n    const handleSubmit = (article) => {\n        doUpdateArticle({\n            method: 'put',\n            data: {\n                article\n            }\n        })\n    }\n\n    useEffect(() => {\n        doFetchArticle()\n    },[doFetchArticle])\n\n    useEffect(() => {\n        if (!fetchArticleResponse) {\n            return\n        }\n\n        setInitialValues({\n            title: fetchArticleResponse.article.title,\n            description: fetchArticleResponse.article.description,\n            body: fetchArticleResponse.article.body,\n            tagList: fetchArticleResponse.article.tagList,\n        })\n\n    },[fetchArticleResponse])\n\n    useEffect(() => {\n        if (!updateArticleResponse) {\n            return\n        }\n        setIsSuccessfulSubmit(true)\n    },[updateArticleResponse])\n\n    useEffect(() => {\n        if (!fetchArticleResponse) {\n            return\n        }\n        if (!isAuthor()) {\n            history.push('/')\n        }\n    },[fetchArticleResponse, history, isAuthor])\n\n    if (isSuccessfulSubmit) {\n       return <Redirect to={`/article/${fetchArticleResponse.article.slug}`}/>\n    }\n\n    if (currentUserState.isLoggedIn === false) {\n        return <Redirect to={'/'} />\n    }\n\n    return (\n        <ArticleForm\n            onSubmit={handleSubmit}\n            errors={(updateArticleError && updateArticleError.errors) || {}}\n            initialValues={initialValues}\n        />\n    )\n}\n\nexport default EditArticle\n","import React from 'react'\nimport useFetch from '../hooks/useFetch'\nimport classNames from 'classnames'\n\nconst AddToFavorites = ({isFavorited, favoritesCount, slug}) => {\n    const apiUrl = `/articles/${slug}/favorite`\n    const [{response}, doFetch] = useFetch(apiUrl)\n    const isFavoritedWithResponse = response\n        ? response.article.favorited\n        : isFavorited\n    const favoritesCountWithResponse = response\n        ? response.article.favoritesCount\n        : favoritesCount\n\n    const handleLike = (e) => {\n        e.preventDefault()\n        doFetch({\n            method: isFavoritedWithResponse ? 'delete' : 'post',\n        })\n    }\n\n    const buttonClasses = classNames({\n        'btn': true,\n        'btn-sm': true,\n        'btn-primary': isFavoritedWithResponse,\n        'btn-outline-primary': !isFavoritedWithResponse\n    })\n\n    return (\n        <button\n            className={buttonClasses}\n            onClick={handleLike}\n        >\n            <i className='ion-heart'></i>\n            <span>&nbsp; {favoritesCountWithResponse}</span>\n        </button>\n    )\n}\nexport default AddToFavorites","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport AddToFavorites from './AddToFavorites'\nimport TagList from './TagList'\n\nconst Feed = ({articles}) => {\n    return (\n        <div>\n            {articles.map((article, index) => (\n                <div className=\"article-preview\" key={index}>\n                    <div className=\"article-meta\">\n                        <Link to={`/profiles/${article.author.username}`}>\n                            <img src={article.author.image} alt=\"\"/>\n                        </Link>\n                        <div className=\"info\">\n                            <Link to={`/profiles/${article.author.username}`} className='author'>\n                                {article.author.username}\n                            </Link>\n                            <span className=\"date\">\n                                {article.createdAt}\n                            </span>\n                        </div>\n                        <div className=\"pull-xs-right\">\n                            <AddToFavorites\n                                isFavorited={article.favorited}\n                                favoritesCount={article.favoritesCount}\n                                slug={article.slug}\n                            />\n                        </div>\n                    </div>\n                    <Link to={`/article/${article.slug}`} className='preview-link'>\n                        <h1>{article.title}</h1>\n                        <p>{article.description}</p>\n                        <span>Read more...</span>\n                        <TagList tags={article.tagList}/>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Feed","import React, {useContext} from 'react'\nimport {NavLink} from 'react-router-dom'\nimport {CurrentUserContext} from '../contexts/currentUserContext'\n\nconst FeedToggle = ({tag}) => {\n    const [currentUserState] = useContext(CurrentUserContext)\n    return (\n        <div className=\"feed-toggle\">\n            <ul className=\"nav nav-pills outline-active\">\n                {currentUserState.isLoggedIn && (\n                    <li className=\"nav-item\">\n                        <NavLink to='/feed' className='nav-link'>\n                            Your Feed\n                        </NavLink>\n                    </li>\n                )}\n                <li className=\"nav-item\">\n                    <NavLink to='/' exact className='nav-link'>\n                        Global Feed\n                    </NavLink>\n                </li>\n                {tag && (\n                    <li className=\"nav-item\">\n                        <NavLink to={`/tags/${tag}`} className='nav-link'>\n                            {`#${tag}`}\n                        </NavLink>\n                    </li>\n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default FeedToggle","import {parse} from 'query-string'\n\nexport const range = (start, end) => {\n    return [...Array(end).keys()].map(el => el + start)\n}\n\nexport const limit = 10\n\nexport const getPaginator = (search) => {\n    const parsedSearch = parse(search)\n    const currentPage = parsedSearch.page ? Number(parsedSearch.page) : 1\n    const offset = currentPage * 10 - limit\n    return {currentPage, offset}\n}","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {range} from '../utils'\nimport classNames from 'classnames'\n\nconst PaginatorItem = ({page, currentPage, url}) => {\n    const classes = classNames({\n        'page-item': true,\n        'active': currentPage === page\n    })\n    return (\n        <li className={classes}>\n            <Link to={`${url}?page=${page}`} className='page-link'>\n                {page}\n            </Link>\n        </li>\n    )\n}\n\nconst Paginator = ({total, limit, url, currentPage}) => {\n    const pagesCount = Math.ceil(total / limit)\n    const pages = range(1, pagesCount)\n\n    if (pagesCount <= 1) {\n        return null\n    }\n\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                <li className=\"page-item\">\n                    {currentPage !== 1 &&\n                    <a className=\"page-link\" href={`${url}?page=${currentPage - 1}`} aria-label=\"Previous\">\n                        <span aria-hidden=\"true\">«</span>\n                        <span className=\"sr-only\">Previous</span>\n                    </a>\n                    }\n                </li>\n                {pages.map(page => (\n                    <PaginatorItem\n                        key={page}\n                        page={page}\n                        limit={limit}\n                        url={url}\n                        currentPage={currentPage}\n                    />\n                ))\n                    .slice(currentPage > 5\n                        ? currentPage - 6\n                        : 0\n                        , currentPage > 5\n                            ? currentPage + 5\n                            : 10)\n                }\n                {currentPage !== pagesCount &&\n                <a className=\"page-link\" href={`${url}?page=${currentPage + 1}`} aria-label=\"Next\">\n                    <span aria-hidden=\"true\">»</span>\n                    <span className=\"sr-only\">Next</span>\n                </a>\n                }\n            </ul>\n        </nav>\n    )\n}\n\nexport default Paginator","import React, {useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport useFetch from '../hooks/useFetch'\nimport ErrorMessage from './ErrorMessage'\nimport Loading from './Loading'\n\nconst PopularTags = () => {\n    const [{response, isLoading, error}, doFetch] = useFetch('/tags')\n\n    useEffect(() => {\n        doFetch()\n    },[doFetch])\n\n    if (isLoading || !response) {\n        return <Loading/>\n    }\n\n    if (error) {\n        return <ErrorMessage/>\n    }\n    return (\n        <div className=\"sidebar\">\n            <p>Popular tags</p>\n            <div className=\"tag-list\">\n                {response.tags.map(tag => (\n                    <Link to={`/tags/${tag}`} className='tag-default tag-pill' key={tag}>\n                        {tag}\n                    </Link>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default PopularTags","import React, {Fragment, useEffect} from 'react'\nimport ErrorMessage from '../../components/ErrorMessage'\nimport Feed from '../../components/Feed'\nimport FeedToggle from '../../components/FeedToggle'\nimport Loading from '../../components/Loading'\nimport Paginator from '../../components/Paginator'\nimport PopularTags from '../../components/PopularTags'\nimport useFetch from '../../hooks/useFetch'\nimport {getPaginator, limit} from '../../utils'\nimport {stringify} from 'query-string'\n\nconst GlobalFeed = ({location, match}) => {\n    const {currentPage, offset} = getPaginator(location.search)\n    const stringifiedParams = stringify({\n        limit,\n        offset\n    })\n    const url = match.url\n    const apiUrl = `/articles?${stringifiedParams}`\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n\n    useEffect(() => {\n        doFetch()\n    },[doFetch, currentPage])\n\n    return (\n        <div className='home-page'>\n            <div className=\"banner\">\n                <div className=\"container\">\n                    <h1> Medium Clone</h1>\n                    <p>A place to share knowledge</p>\n                </div>\n            </div>\n            <div className=\"container page\">\n                <div className=\"row\">\n                    <div className=\"col-md-9\">\n                        <FeedToggle/>\n                        {isLoading && <Loading/>}\n                        {error && <ErrorMessage/>}\n                        {!isLoading && response && (\n                            <Fragment>\n                                <Feed articles={response.articles}/>\n                                <Paginator\n                                    total={response.articlesCount}\n                                    limit={limit}\n                                    url={url}\n                                    currentPage={currentPage}\n                                />\n                            </Fragment>\n                        )}\n                    </div>\n                    <div className=\"col-md-3\">\n                        <PopularTags/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GlobalFeed","import React, {useContext, useEffect, useState} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport BackendErrorMessages from '../../components/BackendErrorMessages'\nimport {CurrentUserContext} from '../../contexts/currentUserContext'\nimport useFetch from '../../hooks/useFetch'\nimport useLocalStorage from '../../hooks/useLocalStorage'\n\nconst Settings = () => {\n    const apiUrl = '/user'\n    const [, setToken] = useLocalStorage('token')\n    const [currentUserState, dispatch] = useContext(CurrentUserContext)\n    const [{response, error}, doFetch] = useFetch(apiUrl)\n    const [image, setImage] = useState('')\n    const [username, setUsername] = useState('')\n    const [bio, setBio] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const user = currentUserState.currentUser\n    const [isSuccessfulLogout, setIsSuccessfulLogout] = useState(false)\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        doFetch({\n            method: 'put',\n            data: {\n                user: {\n                    ...user,\n                    image,\n                    username,\n                    bio,\n                    email,\n                    password\n                }\n            }\n        })\n    }\n\n    const logout = (e) => {\n        e.preventDefault()\n        setToken('')\n        dispatch({type: 'LOGOUT'})\n        setIsSuccessfulLogout(true)\n    }\n\n    const handleChangeImage = (e) => {\n        setImage(e.target.value)\n    }\n\n    const handleChangeUsername = (e) => {\n        setUsername(e.target.value)\n    }\n\n    const handleChangeBio = (e) => {\n        setBio(e.target.value)\n    }\n\n    const handleChangeEmail = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const handleChangePassword = (e) => {\n        setPassword(e.target.value)\n    }\n\n    useEffect(() => {\n        if (!user) {\n            return\n        }\n        setImage(user.image || '')\n        setUsername(user.username)\n        setBio(user.bio || '')\n        setEmail(user.email)\n    }, [user])\n\n    useEffect(() => {\n        if (!response) {\n            return\n        }\n        dispatch({type: 'SET_AUTHORIZED', payload: response.user})\n    },[response, dispatch])\n\n    if (isSuccessfulLogout) {\n        return <Redirect to={'/'} />\n    }\n\n    return (\n        <div className=\"settings-page\">\n            <div className=\"container page\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-md-3 col-xs-12\">\n                        <h1 className=\"text-xs-center\">Your settings</h1>\n                        {error && <BackendErrorMessages backendMessages={error.errors}/>}\n                        <form onSubmit={handleSubmit}>\n                            <fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder='Image URL'\n                                        className='form-control form-control-lg'\n                                        value={image}\n                                        onChange={handleChangeImage}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder='Username'\n                                        className='form-control form-control-lg'\n                                        value={username}\n                                        onChange={handleChangeUsername}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <textarea\n                                        placeholder='Short biography'\n                                        className='form-control form-control-lg'\n                                        rows=\"8\"\n                                        value={bio}\n                                        onChange={handleChangeBio}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder='Email'\n                                        className='form-control form-control-lg'\n                                        value={email}\n                                        onChange={handleChangeEmail}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        placeholder='Password'\n                                        className='form-control form-control-lg'\n                                        value={password}\n                                        onChange={handleChangePassword}\n                                    />\n                                </fieldset>\n                                <button\n                                    type='submit'\n                                    className='btn btn-lg btn-primary pull-xs-right'\n                                >\n                                    Update settings\n                                </button>\n                            </fieldset>\n                        </form>\n                        <hr/>\n                        <button\n                            onClick={logout}\n                            className='btn btn-lg btn-danger'\n                        >\n                            Or click here to logout\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Settings","import React, {Fragment, useEffect} from 'react'\nimport ErrorMessage from '../../components/ErrorMessage'\nimport Feed from '../../components/Feed'\nimport FeedToggle from '../../components/FeedToggle'\nimport Loading from '../../components/Loading'\nimport Paginator from '../../components/Paginator'\nimport PopularTags from '../../components/PopularTags'\nimport useFetch from '../../hooks/useFetch'\nimport {getPaginator, limit} from '../../utils'\nimport {stringify} from 'query-string'\n\nconst TagFeed = ({location, match}) => {\n    const {currentPage, offset} = getPaginator(location.search)\n    const tag = match.params.slug\n    const stringifiedParams = stringify({\n        limit,\n        offset,\n        tag\n    })\n    const url = match.url\n    const apiUrl = `/articles?${stringifiedParams}`\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n\n    useEffect(() => {\n        doFetch()\n    },[doFetch, currentPage, tag])\n\n    return (\n        <div className='home-page'>\n            <div className=\"banner\">\n                <div className=\"container\">\n                    <h1> Medium Clone</h1>\n                    <p>A place to share knowledge</p>\n                </div>\n            </div>\n            <div className=\"container page\">\n                <div className=\"row\">\n                    <div className=\"col-md-9\">\n                        <FeedToggle tag={tag}/>\n                        {isLoading && <Loading/>}\n                        {error && <ErrorMessage/>}\n                        {!isLoading && response && (\n                            <Fragment>\n                                <Feed articles={response.articles}/>\n                                <Paginator\n                                    total={response.articlesCount}\n                                    limit={limit}\n                                    url={url}\n                                    currentPage={currentPage}\n                                />\n                            </Fragment>\n                        )}\n                    </div>\n                    <div className=\"col-md-3\">\n                        <PopularTags/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TagFeed","import {stringify} from 'query-string'\nimport React, {Fragment, useEffect} from 'react'\nimport ErrorMessage from '../../components/ErrorMessage'\nimport Feed from '../../components/Feed'\nimport Loading from '../../components/Loading'\nimport Paginator from '../../components/Paginator'\nimport useFetch from '../../hooks/useFetch'\nimport {getPaginator, limit} from '../../utils'\n\nconst UserArticles = ({location, isFavorites, username, url}) => {\n    const {offset, currentPage} = getPaginator(location.search)\n    const apiUrl = `/articles/?${stringify(isFavorites\n        ? {limit, offset, favorited: username}\n        : {limit, offset, author: username})}`\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n\n    useEffect(() => {\n        doFetch()\n    }, [doFetch, isFavorites, username])\n\n    return (\n        <div>\n            {isLoading && <Loading />}\n            {error && <ErrorMessage />}\n            {!isLoading && response && (\n                <Fragment>\n                    <Feed articles={response.articles}/>\n                    <Paginator\n                        total={response.articlesCount}\n                        url={url}\n                        limit={limit}\n                        currentPage={currentPage}\n                    />\n                </Fragment>\n            )}\n        </div>\n    )\n}\n\nexport default UserArticles","import React, {useEffect} from 'react'\nimport {NavLink} from 'react-router-dom'\nimport useFetch from '../../hooks/useFetch'\nimport UserArticles from './UserArticles'\n\nconst UserProfile = ({location, match}) => {\n    const slug = match.params.slug\n    const url = location.pathname\n    const isFavorites = location.pathname.includes('favorites')\n    const apiUrl = `/profiles/${slug}`\n    const [{response}, doFetch] = useFetch(apiUrl)\n\n    useEffect(() => {\n        doFetch()\n    },[doFetch, apiUrl])\n\n    if (!response) {\n        return null\n    }\n\n    return (\n        <div className=\"profile-page\">\n            <div className=\"user-info\">\n                <div className=\"container page\">\n                    <div className=\"row\">\n                        <div className=\"col-xs-12 col-md-10 offset-md-1\">\n                            <img className='user-img' src={response.profile.image} alt=\"\"/>\n                            <h4>{response.profile.username}</h4>\n                            <p>{response.profile.bio}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-xs-12 col-md-10 offset-md-1\">\n                        <div className=\"articles-toggle\">\n                            <ul className=\"nav nav-pills outline-active\">\n                                <li className=\"nav-item\">\n                                    <NavLink to={`/profiles/${slug}`} className='nav-link' exact>\n                                        My posts\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink to={`/profiles/${slug}/favorites`} className='nav-link'>\n                                        Favorites posts\n                                    </NavLink>\n                                </li>\n                            </ul>\n                        </div>\n                        <UserArticles\n                            username={response.profile.username}\n                            location={location}\n                            isFavorites={isFavorites}\n                            url={url}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserProfile","import React, {Fragment, useEffect} from 'react'\nimport ErrorMessage from '../../components/ErrorMessage'\nimport Feed from '../../components/Feed'\nimport FeedToggle from '../../components/FeedToggle'\nimport Loading from '../../components/Loading'\nimport Paginator from '../../components/Paginator'\nimport PopularTags from '../../components/PopularTags'\nimport useFetch from '../../hooks/useFetch'\nimport {getPaginator, limit} from '../../utils'\nimport {stringify} from 'query-string'\n\nconst YourFeed = ({location, match}) => {\n    const {currentPage, offset} = getPaginator(location.search)\n    const stringifiedParams = stringify({\n        limit,\n        offset\n    })\n    const url = match.url\n    const apiUrl = `/articles/feed?${stringifiedParams}`\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n\n    useEffect(() => {\n        doFetch()\n    },[doFetch, currentPage])\n\n    return (\n        <div className='home-page'>\n            <div className=\"banner\">\n                <div className=\"container\">\n                    <h1> Medium Clone</h1>\n                    <p>A place to share knowledge</p>\n                </div>\n            </div>\n            <div className=\"container page\">\n                <div className=\"row\">\n                    <div className=\"col-md-9\">\n                        <FeedToggle/>\n                        {isLoading && <Loading/>}\n                        {error && <ErrorMessage/>}\n                        {!isLoading && response && (\n                            <Fragment>\n                                <Feed articles={response.articles}/>\n                                <Paginator\n                                    total={response.articlesCount}\n                                    limit={limit}\n                                    url={url}\n                                    currentPage={currentPage}\n                                />\n                            </Fragment>\n                        )}\n                    </div>\n                    <div className=\"col-md-3\">\n                        <PopularTags/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default YourFeed","import React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport Article from './pages/article/Article'\nimport Auth from './pages/auth/Auth'\nimport CreateArticle from './pages/createArticle/CreateArticle'\nimport EditArticle from './pages/editArticle/EditArticle'\nimport GlobalFeed from './pages/globalFeed/GlobalFeed'\nimport Settings from './pages/settings/Settings'\nimport TagFeed from './pages/tagFeed/TagFeed'\nimport UserProfile from './pages/userProfile/UserProfile'\nimport YourFeed from './pages/yourFeed/YourFeed'\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route path={'/'} component={GlobalFeed} exact />\n            <Route path={'/profiles/:slug'} component={UserProfile} />\n            <Route path={'/profiles/:slug/favorites'} component={UserProfile} />\n            <Route path={'/article/:slug/edit'} component={EditArticle} />\n            <Route path={'/article/:slug'} component={Article} />\n            <Route path={'/articles/new'} component={CreateArticle} />\n            <Route path={'/feed'} component={YourFeed} />\n            <Route path={'/tags/:slug'} component={TagFeed} />\n            <Route path={'/login'} component={Auth} />\n            <Route path={'/register'} component={Auth} />\n            <Route path={'/settings'} component={Settings} />\n        </Switch>\n    )\n}\n\nexport default Routes","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {HashRouter as Router} from 'react-router-dom'\nimport CurrentUserChecker from './components/currentUserChecker'\nimport TopBar from './components/TopBar'\nimport {CurrentUserProvider} from './contexts/currentUserContext'\nimport Routes from './routes'\n\nconst App = () => {\n    return (\n        <CurrentUserProvider>\n            <CurrentUserChecker>\n                <Router>\n                    <TopBar/>\n                    <Routes/>\n                </Router>\n            </CurrentUserChecker>\n        </CurrentUserProvider>\n    )\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}